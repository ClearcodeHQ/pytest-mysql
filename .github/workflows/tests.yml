name: Run tests on MySQL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8, 3.9, pypy-3.7-v7.3.3]
    env:
      OS: ubuntu-latest
      PYTHON: ${{ matrix.python-version }}
    # Service containers to run with `container-job`
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: tests
        ports:
          - 3333:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    - name: Verify MySQL connection
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"3333" --silent; do
          sleep 1
        done
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install MySQL
      run: |
        sudo apt-get install mysql-server
        mysqld --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    - name: Run test
      run: |
        pytest -n 0 -k "not mysqlnoproc" --cov-report=xml --mysql-user=root
    - name: Run xdist test
      run: |
        pytest -n 1 -k "not mysqlnoproc" --cov-report=xml:coverage-xdist.xml --mysql-user=root
    - name: Run noproc test
      run: |
        pytest -n 0 -k mysqlnoproc --cov-report=xml:coverage-noproc.xml --mysql-host="127.0.0.1" --mysql-port=3333
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
#        files: ./coverage.xml, ./coverage-xdist.xml, ./coverage-noproc.xml
        flags: linux,mysql
        env_vars: OS, PYTHON
        fail_ci_if_error: true
