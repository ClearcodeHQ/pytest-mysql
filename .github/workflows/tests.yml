name: Run tests on MySQL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests-mysql-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", pypy-3.8]
    env:
      OS: ubuntu-latest
      PYTHON: ${{ matrix.python-version }}
    # Service containers to run with `container-job`
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: tests
        ports:
          - 3333:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - uses: ankane/setup-mysql@v1
      with:
        mysql-version: 8.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check MySQL Version
      run: mysqld --version
    - name: Run test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest -n 0 -k "not mysqlnoproc" --cov-report=xml --mysql-user=root
    - name: Run xdist test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest -n 0 -k "not mysqlnoproc" --cov-report=xml:coverage-xdist.xml --mysql-user=root
    - name: Run noproc test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest -n 0 -k mysqlnoproc --cov-report=xml:coverage-noproc.xml --mysql-host="127.0.0.1" --mysql-port=3333
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.3
      with:
        flags: linux,mysql
        env_vars: OS, PYTHON
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  tests-mariadb-linux:
    runs-on: ubuntu-latest
    needs: [tests-mysql-linux]
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", pypy-3.8]
    env:
      OS: ubuntu-latest
      PYTHON: ${{ matrix.python-version }}
    services:
      mysql:
        image: mariadb
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
          MARIADB_DATABASE: tests
        ports:
          - 3333:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - uses: ankane/setup-mariadb@v1
      with:
        mariadb-version: "10.10"
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check MySQL Version
      run: mysqld --version
    - name: Run test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest --mysql-user=$USER -n 0 -k "not mysqlnoproc" --cov-report=xml
    - name: Run xdist test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest --mysql-user=$USER -n 1 -k "not mysqlnoproc" --cov-report=xml:coverage-xdist.xml
    - name: Run noproc test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest -n 0 -k mysqlnoproc --cov-report=xml:coverage-noproc.xml --mysql-host="127.0.0.1" --mysql-port=3333
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.3
      with:
        flags: linux,mariadb
        env_vars: OS, PYTHON
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  tests-mysql-macosx:
    runs-on: macos-latest
    needs: [tests-mysql-linux]
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.9, "3.10", "3.11"]
    env:
      OS: macos-latest
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - uses: ankane/setup-mysql@v1
      with:
        mysql-version: 8.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check MySQL Version
      run: mysqld --version
    - name: Run test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest -n 0 -k "not mysqlnoproc" --cov-report=xml --mysql-user=root --basetemp=/tmp/pytest_mysql

  tests-mariadb-macosx:
    runs-on: macos-latest
    needs: [tests-mysql-macosx, tests-mariadb-linux]
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.9, "3.10", "3.11"]
    env:
      OS: macos-latest
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - uses: ankane/setup-mariadb@v1
      with:
        mariadb-version: "10.10"
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check MySQL Version
      run: mysqld --version
    - name: Run test
      uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.1
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: "--skip-lock"
        command: pytest --mysql-user=$USER -n 0 -k "not mysqlnoproc" --cov-report=xml --basetemp=/tmp/pytest_mysql
